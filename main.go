// govcs auto generates consts based on current VCS data.

package main

import (
	"log"
	"os"
	"os/exec"
	"text/template"
)

var tmpl = template.Must(template.New("tmpl").Parse(
	`// auto generated by govcs; DO NOT EDIT

package {{.Package}}

var (
	VCS_TYPE = {{.Type | printf "%#v" }}
	VCS_VERS = {{.Vers | printf "%#v" }}
	VCS_INFO = {{.Info | printf "%#v" }}
)
`))

var packageName = "main"

func main() {
	log.SetFlags(0)

	vcs := LookupVCS()

	if vcs == nil {
		log.Fatal("unknown vcs")
	}

	tmpl.Execute(os.Stdout, vcs)
}

var allVCSFuncs = [...]VCSFunc{
	Git,
}

type VCSFunc func(*VCS) bool

func LookupVCS() *VCS {
	var vcs VCS

	for _, f := range allVCSFuncs {
		if f(&vcs) {
			return &vcs
		}
	}

	return nil
}

type VCS struct {
	Package string

	Type, Vers, Info string
}

func Git(v *VCS) bool {
	if exec.Command("git", "rev-parse").Run() != nil {
		return false
	}

	v.Type = "git"

	d, _ := exec.Command("git", "rev-parse", "HEAD").Output()
	v.Vers = string(d)

	d, _ = exec.Command("git", "remote", "-v", "show", "-n", "origin").Output()
	v.Info = string(d)

	return true
}
